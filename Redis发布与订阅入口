

import java.io.IOException;

import org.apache.log4j.Logger;

import com.bsj.a5cmd.Filter.Output;
import com.bsj.a5cmd.cmdDown.RedisSubscribe;
import com.bsj.util.ExceptionUtil;
import com.bsj.util.JedisBSJFactory;

import redis.clients.bsj.JedisClusterBSJ;

public class SubThread extends Thread {

	static Logger logger = Logger.getLogger(SubThread.class);


	private final RedisMsgPubSubListener subscriber = new RedisMsgPubSubListener();

	
	private String channel;

	public SubThread(String channel) {
		super("SubThread");
		this.channel = channel;
	}

	@Override
	public void run() {
		// 获取JEDIS
		JedisClusterBSJ jedis = JedisBSJFactory.getJedis();
		if (jedis == null) {
			logger.warn("JedisBsjFactory.getJedis() fail");
			return;
		}
		try {
			jedis.subscribe(subscriber,channel);
		} catch (Exception e) {
			System.out.println(String.format("subsrcibe channel error, %s", e));
		} finally {
			if (jedis != null) {
				try {
					jedis.close();
				} catch (IOException e) {
					logger.error("jedis.close() fail:"+ExceptionUtil.getStackStr(e));
				}
			}
		}
	}
}




public class CmdStarter {
	static Logger logger = Logger.getLogger(CmdStarter.class);

	
	static SubThread subPutThread = new SubThread(ConstantUtil.PUTCHANNEL);
	static SubThread subDelThread = new SubThread(ConstantUtil.DELCHANNEL);

	public static void start() throws Exception {
		
	
		
		logger.info("初始化命令下发添加到内存订阅.");
		
		
		subPutThread.start();

		logger.info("初始化命令下发删除内存订阅.");
		//CommandDownConsumer.start();
		subDelThread.start();
		
		
		

	}

	public static void stop() {

	
		
		logger.info("关闭命令下发订阅.");
		CommandDownConsumer.stop();	
		
		logger.info("关闭命令下发添加与删除内存订阅.");
		subPutThread.interrupt();;;
		subDelThread.interrupt();
		
	}
	
	/**
	 * 测试发布与订阅
	 * @param args
	 * @throws Exception
	 */
	public static void main(String[] args) throws Exception {
		PropertyConfigurator.configure("conf/log4j.properties");
		start();
		Publisher Publisher = new Publisher();
		Publisher.start();
	}
	

}



